name: Build & deploy

on:
  push:
    branches: [ master, dev, demo, demo-legacy ]
  pull_request:

jobs:
  lint-and-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: (cd package && npm ci &&  npm run build:dev)
    - run: (cd iframe && npm ci &&  npm run build)
  deploy:
    needs: [lint-and-build]
    if: >
     github.event_name == 'push' && (
       github.ref == 'refs/heads/master' ||
       github.ref == 'refs/heads/dev' ||
       github.ref == 'refs/heads/demo' ||
       github.ref == 'refs/heads/demo-legacy')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get git branch
      id: git-branch
      run: |
        if [ $REF == 'refs/heads/master' ]
        then
          echo "::set-output name=stage::prod"
          echo "::set-output name=domain::widget.onramper.com"
        elif [ $REF == 'refs/heads/dev' ]
        then
          echo "::set-output name=stage::dev"
          echo "::set-output name=domain::widget.onramper.dev"
        elif [ $REF == 'refs/heads/demo' ]
        then
          echo "::set-output name=stage::demo"
          echo "::set-output name=domain::demo.onramper.dev"
        elif [ $REF == 'refs/heads/demo-legacy' ]
        then
          echo "::set-output name=stage::demo"
          echo "::set-output name=domain::legacy.demo.onramper.dev"
        else
          exit 1
        fi
      env:
        REF: ${{ github.ref }}
    - name: Get Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: (cd package && npm ci &&  npm run build:$STAGE)
      env:
        STAGE: ${{ steps.git-branch.outputs.stage }}
    - run: (cd iframe && npm ci &&  npm run build:$STAGE)
      env:
        STAGE: ${{ steps.git-branch.outputs.stage }}
    - name: Deploy to static site
      uses: onramper/action-deploy-aws-static-site@v1
      with:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        domain: ${{ steps.git-branch.outputs.domain }}
        publish_dir: './iframe/build'
